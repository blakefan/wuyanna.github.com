---
layout: page
title: "Personal Statement"
date: 2013-09-30 00:14
comments: true
sharing: true
footer: true
---

My general interest in technology evolved into a potential professional calling during an undergraduate class project. The project required that I make a simple product with a single-chip microcomputer and an audio output system. While the other students mostly focused on the recorded content and thus programmed it as a talking machine with little practical usage, I built a timer with human voice, which could be very useful when people were not able to see the digits on a regular timer. Rather than just complete the assignment, I designed a usable product that received high praise from my teacher and peers. More importantly, in the process, I discovered a new interest in the practical uses of technology, an interest that continues to drive my career. Since then, I have worked tenaciously to acquire practical experience and advanced knowledge. 

My passion in technology compelled me to seek every research opportunity for undergraduates at school. My first research project with Professor Hui Hong, who specializes in graphics, introduced me to the employment of sophisticated algorithms in practical applications. This research focused on the image stitching method, which matches parts of two pictures and combines them into a single image. After reading the relevant papers, I implemented a smooth algorithm that facilitated this process. Image stitching was not so popular in industry at that time, but it is now widely applied in many panorama applications nowadays. My second research project was my graduation project, and it focused on visualizing large hierarchical data. For this project, I read numerous papers until I found a nice solution to the problem; specifically, I used a hyperbolic tree because its user interaction was interesting and it fit all the needs of viewing large data on a limited screen. I also constructed it with Silverlight so that it worked well with browsers. In the end, I enjoyed these projects, and these experiences left me with an even more interesting insight: the academic world has a lot of inspiring ideas, many of which are just not mature enough to be commercialized. In these areas, I see tremendous opportunities for a creative and rigorous mind.

The projects at school cultivated my interest in software technology, but it is my industry experience that most influenced my approach to software engineering. During my internship at Itokuro, a Japanese company that produces social games, I was exposed to an exciting business environment and the dynamic inner-workings of game development. I was totally fascinated by the innovative and artistic work, and I enjoyed working with artist colleagues. I had loved playing games, but I now discovered it felt even better to develop them. The challenges involved in making physical movements more realistic brought me a great sense of accomplishment when I finally succeeded. When programming, I was highly focused and effective, and my boss expressed amazement at my productivity. He also shared lots of insight regarding the social gaming industry in Japan. My enthusiasm for developing games was generated at that time.

After a half-year intensive working and learning in the game industry, I decided I wanted to make my own games. I started with a simple level-based action game, which allowed me to execute the game design and programming all by myself. I worked every day until midnight for two weeks straight. When I finally finished, I put my work up on Mochigames.com, a website that hosts flash games. The positive comments left by players strengthened my determination to develop my own game. Beyond motivation, this experience gave me a comprehensive knowledge of the many processes involved in game development and showed me what I needed to improve if I wanted to make a truly great game. Most notably, I needed to learn more about software engineering from a technical perspective.

With this goal in mind, I next chose to work at Dianping.com, the Chinese version of Yelp and Groupon, as an IOS developer. I chose this position because the company provided me with abundant technical resources and an environment in which products were developed among different functionality groups. Hence, through this work, I learned not only software architecture, but also the intricacies of product development and management. I learned quickly and strived for perfection in my job. My supervisor often assigned important tasks to me. 

My responsibilities increased when my supervisor assigned me the role of lead developer for the company’s new IOS product. The previous product functioned well but was not smartly architected because it had been developed by several people without a reusable and extensible pattern. This made the code repetitive and buggy when the product design changed repeatedly. For example, although the previous product was developed in the pattern of Model-View-Controller, the controller was too heavy because it not only contained the control of the user interface but also contained complicated business rules. In response, I discovered a method to separate the changeable outfits and business rules with a category design pattern. It made my code concise and easy to extend. After I introduced this method in the code-review session, the others on the project agreed it was a great idea and employed this pattern in their development. Ultimately, my direction led to a shorter development circle and fewer bugs in product.

Over the past few years, I have constantly sought to improve my abilities. For example, in order to get more experience in software engineering and architecture of different-sized software, I took several outsourcing jobs for my friend’s company. During this process, I collected the reusable components I developed and combined them into a common framework that is now open source on Google Code. I did this because I learned and benefited a lot from open source projects and I hoped that my work would help others with similar goals and interests.

My success involves more than simple mastery of software technology; I know that leadership and interpersonal skills are also essential, and I have worked for years to develop them. During my first two years in university, I spent a lot of time in student activities, including the student union. I organized big events, such as culture festivals and exhibitions, and learned a lot about how to direct activities and treat team members. I also took part in a financial association. When I became president of the association, it had no more than 100 members. I knew we could do better, so I put together a stock market magazine and organized a big recruitment meeting. I also hosted activities like lectures and discussion sessions every other week, and watched the audiences grow consistently. By the time I left, we had recruited more than 300 new members and greatly increased the organization’s influence and reach. This work in student affairs taught me how to communicate effectively with product managers and how to present ideas to team members. These abilities have enhanced my subsequent professional and academic work, and they will make a noticeable difference when I start my own game development teams.

My interest in art adds to my affection of entertainment technology. I wrote play scripts for high school performances; I designed logos for various events in university; I love music and play guitar. 